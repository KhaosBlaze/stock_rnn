import pandas as pd
import numpy as np

def get_X_Y(stock, days_to_train_on):
    # Importing the training set || Training on MSFT
	dataset = pd.read_csv('stocks/' + stock + '.csv')
	# reverse datatype indexing so it's from oldest to newest
	dataset = dataset.reindex(index=dataset.index[::-1])
	dataset = dataset.reset_index()
	dataset = dataset.drop(columns=['index'])

	training_set = []
    for i in range(1, len(dataset)):
        temp_set = []
        temp_set.append(dataset['close'][i - 1] - dataset['open'][i - 1])
        temp_set.append(dataset['high'][i - 1])
        temp_set.append(dataset['low'][i - 1])
        temp_set.append(dataset['open'][i])
        temp_set.append(dataset['volume'][i-1])
        if dataset['close'][i] > dataset['open'][i]:
            temp_set.append(1)
        else:
            temp_set.append(0)
        training_set.append(temp_set)

    scx = ColumnTransformer([("normies", MinMaxScaler(feature_range=(-1, 1)), slice(0, 1)),
                            ("normies_price", MinMaxScaler(feature_range=(0, 1)), slice(1, 4)),
                            ("normies_vol", MinMaxScaler(feature_range=(0, 1)), slice(4, 5))])

    X = []
    y = []
    for i in range(days_to_train_on, len(training_set)):
        x_temp = scx.fit_transform(training_set[i - days_to_train_on:i, 0:5])
        X.append(x_temp)
        y.append(training_set[i, 5])

	X, y = np.array(X), np.array(y).astype(int)
	return X, y



scx = ColumnTransformer(
    [("normies", MinMaxScaler(feature_range=(-1, 1)), slice(0, 1)),
     ("normies_price", MinMaxScaler(feature_range=(0, 1)), slice(1, 4)),
     ("normies_vol", MinMaxScaler(feature_range=(0, 1)), slice(4, 5))])
